{"mappings":"AAAA;AAEA,MAAM,QAAQ,SAAS,aAAa,CAAC;AACrC,MAAM,UAAU,MAAM,gBAAgB,CAAC;AACvC,MAAM,QAAQ,MAAM,aAAa,CAAC;AAElC,QAAQ,OAAO,CAAC,CAAC,QAAQ;IACvB,OAAO,gBAAgB,CAAC,SAAS;QAC/B,MAAM,OAAO,MAAM,IAAI,CAAC,MAAM,gBAAgB,CAAC;QAC/C,MAAM,iBAAiB,UAAU,KAAK,UAAU;QAEhD,MAAM,aAAa,KAAK,IAAI,CAAC,CAAC,GAAG;YAC/B,MAAM,QAAQ,EAAE,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI;YAC3C,MAAM,QAAQ,EAAE,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI;YAE3C,IAAI,gBACF,OACE,WAAW,MAAM,OAAO,CAAC,SAAS,OAClC,WAAW,MAAM,OAAO,CAAC,UAAU;YAIvC,OAAO,MAAM,aAAa,CAAC;QAC7B;QAEA,WAAW,OAAO,CAAC,CAAC,MAAQ,MAAM,WAAW,CAAC;IAChD;AACF","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nconst table = document.querySelector('table');\nconst headers = table.querySelectorAll('th');\nconst tbody = table.querySelector('tbody');\n\nheaders.forEach((header, index) => {\n  header.addEventListener('click', () => {\n    const rows = Array.from(tbody.querySelectorAll('tr'));\n    const isNumberColumn = index === 2 || index === 3;\n\n    const sortedRows = rows.sort((a, b) => {\n      const cellA = a.cells[index].innerText.trim();\n      const cellB = b.cells[index].innerText.trim();\n\n      if (isNumberColumn) {\n        return (\n          parseFloat(cellA.replace(/[$,]/g, '')) -\n          parseFloat(cellB.replace(/[$,]+/g, ''))\n        );\n      }\n\n      return cellA.localeCompare(cellB);\n    });\n\n    sortedRows.forEach((row) => tbody.appendChild(row));\n  });\n});\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}