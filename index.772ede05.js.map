{"mappings":"ACEA,IAAM,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAU,EAAM,gBAAgB,CAAC,MACjC,EAAQ,EAAM,aAAa,CAAC,SAElC,EAAQ,OAAO,CAAC,SAAC,CAAA,CAAQ,CAAzB,EACE,EAAO,gBAAgB,CAAC,QAAS,WAC/B,IAAM,EAAO,MAAM,IAAI,CAAC,EAAM,gBAAgB,CAAC,OACzC,EAAiB,AAAU,IAAV,GAAe,AAAU,IAAV,EAgBtC,AAdmB,EAAK,IAAI,CAAC,SAAC,CAAA,CAAG,CAAjC,EACE,IAAM,EAAQ,EAAE,KAAK,CAAC,EAAM,CAAC,SAAS,CAAC,IAAI,GACrC,EAAQ,EAAE,KAAK,CAAC,EAAM,CAAC,SAAS,CAAC,IAAI,UAE3C,AAAI,EAEA,WAAW,EAAM,OAAO,CAAC,QAAS,KAClC,WAAW,EAAM,OAAO,CAAC,SAAU,KAIhC,EAAM,aAAa,CAAC,EAC7B,GAEW,OAAO,CAAC,SAAC,CAApB,EAA4B,OAAA,EAAM,WAAW,CAAC,E,EAChD,EACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar table = document.querySelector(\"table\");\nvar headers = table.querySelectorAll(\"th\");\nvar tbody = table.querySelector(\"tbody\");\nheaders.forEach(function(header, index) {\n    header.addEventListener(\"click\", function() {\n        var rows = Array.from(tbody.querySelectorAll(\"tr\"));\n        var isNumberColumn = index === 2 || index === 3;\n        var sortedRows = rows.sort(function(a, b) {\n            var cellA = a.cells[index].innerText.trim();\n            var cellB = b.cells[index].innerText.trim();\n            if (isNumberColumn) return parseFloat(cellA.replace(/[$,]/g, \"\")) - parseFloat(cellB.replace(/[$,]+/g, \"\"));\n            return cellA.localeCompare(cellB);\n        });\n        sortedRows.forEach(function(row) {\n            return tbody.appendChild(row);\n        });\n    });\n});\n\n//# sourceMappingURL=index.772ede05.js.map\n","'use strict';\n\nconst table = document.querySelector('table');\nconst headers = table.querySelectorAll('th');\nconst tbody = table.querySelector('tbody');\n\nheaders.forEach((header, index) => {\n  header.addEventListener('click', () => {\n    const rows = Array.from(tbody.querySelectorAll('tr'));\n    const isNumberColumn = index === 2 || index === 3;\n\n    const sortedRows = rows.sort((a, b) => {\n      const cellA = a.cells[index].innerText.trim();\n      const cellB = b.cells[index].innerText.trim();\n\n      if (isNumberColumn) {\n        return (\n          parseFloat(cellA.replace(/[$,]/g, '')) -\n          parseFloat(cellB.replace(/[$,]+/g, ''))\n        );\n      }\n\n      return cellA.localeCompare(cellB);\n    });\n\n    sortedRows.forEach((row) => tbody.appendChild(row));\n  });\n});\n"],"names":["table","document","querySelector","headers","querySelectorAll","tbody","forEach","header","index","addEventListener","rows","Array","from","isNumberColumn","sortedRows","sort","a","b","cellA","cells","innerText","trim","cellB","parseFloat","replace","localeCompare","row","appendChild"],"version":3,"file":"index.772ede05.js.map"}